name: "EasyAudit - fix & PR (paid)"

on:
  workflow_dispatch:
    inputs:
      ack_paid:
        description: "I confirm this action is PAID and a PR will be billed"
        required: true
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write

jobs:
  fix-and-pr:
    if: ${{ inputs.ack_paid == true }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/crealoz/easyaudit:latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Scan (JSON)
        run: |
          mkdir -p report
          echo "PWD=$(pwd)  GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          # Adapte le chemin cible si besoin (ex: ../magento/app/code)
          easyaudit scan \
            --format=json \
            --output=report/easyaudit-report.json \
            "$GITHUB_WORKSPACE" \
            --exclude="vendor,generated,var,pub/static,pub/media"
          test -s report/easyaudit-report.json || { echo "Empty or missing JSON report"; exit 1; }

      - name: Apply fixes (paid)
        env:
          EASYAUDIT_AUTH: ${{ secrets.EASYAUDIT_AUTH }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          easyaudit fix-apply report/easyaudit-report.json --confirm

      - name: Install git
        run: |
          apt install -y git

      - name: Commit & push (if changed)
        id: push
        run: |
          BRANCH="sec-fix/easyaudit-$(date +%s)"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          if [ -n "$(git status --porcelain)" ]; then
            git checkout -b "$BRANCH"
            git add -A
            git -c user.name="github-actions[bot]" \
                -c user.email="41898282+github-actions[bot]@users.noreply.github.com" \
                commit -m "chore(easyaudit): security fixes (paid)"
            git push -u origin "$BRANCH"
            echo "pushed=true" >> $GITHUB_OUTPUT
          else
            echo "No local changes detected."
            echo "pushed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.push.outputs.pushed == 'true'
        uses: actions/github-script@v7
        env:
          PR_TITLE: "EasyAudit security fix"
          PR_BODY:  "PR generated via EasyAudit (paid)."
          BASE: ${{ github.ref_name }}
          BRANCH: ${{ env.BRANCH }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = process.env.PR_TITLE;
            const body  = process.env.PR_BODY;
            const base  = process.env.BASE || "main";
            const head  = process.env.BRANCH;
            if (!head) {
              core.setFailed("Missing branch name");
              return;
            }
            try {
              const { data } = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title, head, base, body
              });
              core.info(`PR created: #${data.number} ${data.html_url}`);
              core.summary.addHeading('PR created').addRaw(`URL: ${data.html_url}`).write();
            } catch (e) {
              if (e.status === 422) {
                core.warning("PR already exists or no diff between branches.");
              }
              else {
                core.setFailed(`Failed to create PR: ${e.message}`);
              }
            }
